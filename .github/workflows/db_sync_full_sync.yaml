name: db-sync - full cycle tests

on:
  workflow_dispatch:
    inputs:
      node_version:
        description: "cardano-node version"
        required: true
        default: "tags/10.1.2"
      db_sync_version:
        description: "db-sync version"
        required: true
        default: "tags/13.6.0.1"
      db_sync_start_arguments:
        description: "db-sync start arguments"
        required: false
        default: "none"
      environment:
        description: "Environment on which Buildkite agent will run tests"
        type: choice
        options:
        - mainnet
        - preprod
        - preview
        - shelley-qa
        default: preprod
      run_only_sync_test:
        type: boolean
        default: true
        description: "If checked only full sync test will be run otherwise local snapshot creation and restoration tests will be started after sync test is completed"

jobs:
  db_sync_test:
    runs-on: ubuntu-latest
    steps:
      - name: trigger the Buildkite pipeline - run db-sync full sync test
        uses: 'buildkite/trigger-pipeline-action@v1.5.0'
        env:
          BUILDKITE_API_ACCESS_TOKEN: ${{ secrets.BUILDKITE_API_ACCESS_TOKEN }}
          PIPELINE: 'input-output-hk/db-sync-sync-tests'
          BRANCH: ${{ github.ref_name || 'main' }}
          MESSAGE: ':github: Triggered by GitHub Action'
          AWS_DB_USERNAME: ${{ secrets.AWS_DB_USERNAME }}
          AWS_DB_PASS: ${{ secrets.AWS_DB_PASS }}
          AWS_DB_NAME: ${{ secrets.AWS_DB_NAME }}
          AWS_DB_HOSTNAME: ${{ secrets.AWS_DB_HOSTNAME }}
          BUILD_ENV_VARS: '{
          "node_version":"${{ github.event.inputs.node_version }}",
          "db_sync_version":"${{ github.event.inputs.db_sync_version }}",
          "db_sync_start_arguments":"${{ github.event.inputs.db_sync_start_arguments }}",
          "environment":"${{ github.event.inputs.environment }}",
          "run_only_sync_test":"${{ github.event.inputs.run_only_sync_test }}",
          "AWS_DB_USERNAME":"${{ secrets.AWS_DB_USERNAME }}",
          "AWS_DB_PASS":"${{ secrets.AWS_DB_PASS }}",
          "AWS_DB_NAME":"${{ secrets.AWS_DB_NAME }}",
          "AWS_DB_HOSTNAME":"${{ secrets.AWS_DB_HOSTNAME }}"
          }'