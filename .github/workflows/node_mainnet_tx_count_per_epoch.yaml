name: mainnet_tx_count_per_epoch

on:
  schedule:
    - cron:  '0 8 * * *'
  workflow_dispatch:

jobs:
  mainnet_tx_count_per_epoch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name || 'main' }}

      - name: Install Nix
        uses: cachix/install-nix-action@v30
        if: matrix.sys.os != 'windows-latest'
        with:
          extra_nix_config: |
            trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
            substituters = https://cache.nixos.org https://cache.iog.io
            allow-import-from-derivation = true

      - name: Enter Nix Development Shell
        if: matrix.sys.os != 'windows-latest'
        run: |
          nix develop --accept-flake-config .#python --command bash -c "
            echo 'Inside Nix development shell';
            python -m pip install --upgrade pip;
            pip install pytest requests allure-pytest pytest-html pytest-order pyyaml psycopg2 psutil blockfrost-python GitPython colorama matplotlib;
          "

      - name: Get the automated tests results
        env:
          BUILDKITE_API_ACCESS_TOKEN: ${{ secrets.BUILDKITE_API_ACCESS_TOKEN }}
          AWS_DB_USERNAME: ${{ secrets.AWS_DB_USERNAME }}
          AWS_DB_PASS: ${{ secrets.AWS_DB_PASS }}
          AWS_DB_NAME: ${{ secrets.AWS_DB_NAME }}
          AWS_DB_HOSTNAME: ${{ secrets.AWS_DB_HOSTNAME }}
          BLOCKFROST_API_KEY: ${{ secrets.BLOCKFROST_API_KEY }}
        run: |
          echo "current branch: $(git branch --show-current)"
          nix develop --accept-flake-config .#python --command python -m sync_tests.tests.node_write_mainnet_tx_count_per_epoch
